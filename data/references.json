{
	"references": [
		{
			"id": 0,
			"name": "🔥",
			"about": "Hottest Resources Out There",
			"links": [
				{
					"name": "dotnetperls.com",
					"url": "https://www.dotnetperls.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "c-sharpcorner.com",
					"url": "https://www.c-sharpcorner.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "tutorialsteacher.com",
					"url": "https://www.tutorialsteacher.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 1,
			"name": "Bootstrap",
			"about": "Free and open-source CSS framework directed at responsive, mobile-first front-end web development. It contains HTML, CSS and (optionally) JavaScript-based design templates for typography, forms, buttons, navigation, and other interface components.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Bootstrap_(front-end_framework)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs (5.1)",
					"url": "https://getbootstrap.com/docs/5.1/getting-started/introduction/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Dark Theme using JS",
					"url": "https://blog.shhdharmen.me/toggle-light-and-dark-themes-in-bootstrap",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Dark Theme using CSS",
					"url": "https://vinorodrigues.github.io/bootstrap-dark-5/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "StartBootstrap",
					"url": "https://startbootstrap.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "CoreUI Admin",
					"url": "https://github.com/coreui/coreui-free-bootstrap-admin-template",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DatePicker",
					"url": "https://bootstrap-datepicker.readthedocs.io/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Material Design vs Bootstrap: Which One is Better?",
					"url": "https://azmind.com/material-design-vs-bootstrap/#difference",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MDB Bootstrap - Material Design",
					"url": "https://mdbootstrap.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 2,
			"name": "Async/Await",
			"about": "In computer programming, the async/await pattern is a syntactic feature of many programming languages that allows an asynchronous, non-blocking function to be structured in a way similar to an ordinary synchronous function.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Async/await",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Why",
					"url": "https://stackoverflow.com/a/32343477/7389293",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "How and When",
					"url": "https://stackoverflow.com/questions/14455293/how-and-when-to-use-async-and-await",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Getting Started",
					"url": "https://www.pluralsight.com/guides/csharp-async-await-keywords-getting-started",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Control Flow",
					"url": "https://www.pluralsight.com/guides/understand-control-flow-async-await",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 3,
			"name": "SSMS and MSSQL Sever (actual server)",
			"about": "SQL Server Management Studio (SSMS) is a software application used for configuring, managing, and administering all components within Microsoft SQL Server (which is, a relational database management system, or database server).",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/SQL_Server_Management_Studio",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Local Server Set Up",
					"url": "https://blogs.triggerdb.com/2021/06/02/instalar-y-configurar-sql-2019-developer-paso-a-paso/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Import/Export DB",
					"url": "https://stackoverflow.com/a/66770043/7389293",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Multiple methods for scheduling a SQL Server backup automatically",
					"url": "https://www.sqlshack.com/multiple-methods-for-scheduling-a-sql-server-backup-automatically/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 4,
			"name": "CSS",
			"about": "Cascading Style Sheets (CSS) is a style sheet language used for describing the presentation (looks) of a document written in a markup language such as HTML or XML (including XML dialects such as SVG, MathML or XHTML).",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/CSS",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Flexbox Guide",
					"url": "https://css-tricks.com/snippets/css/a-guide-to-flexbox/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Grid Guide",
					"url": "https://css-tricks.com/snippets/css/complete-guide-grid/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "CSS Topics Guides",
					"url": "https://css-tricks.com/guides/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "CSS Tooltips Implementation",
					"url": "https://www.florin-pop.com/blog/2019/05/pure-css-tooltip/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 5,
			"name": "TIME (General)",
			"about": "General use. Including and not limited to: C#, SQL, JS, etc. In computer science and computer programming, system time represents a computer system's notion of the passage of time. In this sense, time also includes the passing of days on the calendar. ",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/System_time",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DateTime to \"YYYYMMDDHHMMSS\" format",
					"url": "https://stackoverflow.com/a/24728080/7389293",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "UNIX Time 🔥",
					"url": "https://currentmillis.com/standard/specification/client-centric-time/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "UNIX_TIMESTAMP in SQL Server",
					"url": "https://stackoverflow.com/questions/8837225/unix-timestamp-in-sql-server",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "How to get correct UNIX_TIMESTAMP in C#",
					"url": "https://stackoverflow.com/questions/21219797/how-to-get-correct-timestamp-in-c-sharp",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "timeSpan.ToString()",
					"url": "https://stackoverflow.com/questions/11077711/timespan-tostring-format",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "dotnetperls.com",
					"url": "https://www.dotnetperls.com/timespan",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 6,
			"name": "nTier/Layered Architecture",
			"about": "Multitier architecture (often referred to as n-tier architecture) is a client–server architecture in which presentation, application processing and data management functions are physically separated. The most widespread use of multitier architecture is the three-tier architecture.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Multitier_architecture",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "First Reading",
					"url": "https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/n-tier",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Layered Project Case",
					"url": "https://stackoverflow.com/questions/71714676/where-do-i-place-the-entity-framework-queries-in-layered-architecture",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 7,
			"name": "jQuery",
			"about": "jQuery is a JavaScript library designed to simplify HTML DOM tree traversal and manipulation, as well as event handling, CSS animation, and Ajax.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/JQuery",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://learn.jquery.com/code-organization/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "jQuery Cheatsheet",
					"url": "https://www.codecademy.com/learn/learn-jquery/modules/learn-jquery-introduction/cheatsheet",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "jQueryUI",
					"url": "https://jqueryui.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Select2",
					"url": "https://select2.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "jquery-steps",
					"url": "http://www.jquery-steps.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DataTables (Examples)",
					"url": "https://datatables.net/examples/index",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DataTables at ASP.NET (Back-end)",
					"url": "https://gist.github.com/ChinhP/9b4dc1df1b12637b99a420aa268ae32b",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "jQueryValidation",
					"url": "https://jqueryvalidation.org/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 8,
			"name": "Design Patterns",
			"about": "It is a general, reusable solution to a commonly occurring problem within a given context in software design.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Software_design_pattern",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Source Making",
					"url": "https://sourcemaking.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Refactoring Guru",
					"url": "https://refactoring.guru/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "C# Design Patterns",
					"url": "https://scottlilly.com/c-design-patterns/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "How to Learn Software Design and Architecture | The Full-stack Software Design & Architecture Map",
					"url": "https://khalilstemmler.com/articles/software-design-architecture/full-stack-software-design/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 9,
			"name": "Vue.js",
			"about": "Open-source model–view–viewmodel front-end JavaScript framework for building user interfaces and single-page applications.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Vue.js",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://vuejs.org/guide/introduction.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 10,
			"name": "ReactJS",
			"about": "Free and open-source front-end JavaScript library for building user interfaces based on UI components. It can be used as a base in the development of single-page, mobile, or server-rendered applications with frameworks like Next.js. However, React is only concerned with state management and rendering that state to the DOM, so creating React applications usually requires the use of additional libraries for routing, as well as certain client-side functionality.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/React_(JavaScript_library)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "React in 100 Seconds",
					"url": "https://youtu.be/Tn6-PIqc4UM",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://reactjs.org/docs/getting-started.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 11,
			"name": "Angular",
			"about": "TypeScript-based free and open-source web application framework. Led by the Angular Team at Google and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built AngularJS.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Angular_(web_framework)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://angular.io/docs",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Sample App (at GitHub pages",
					"url": "https://www.syncfusion.com/blogs/post/easy-steps-to-host-an-angular-app-in-github-pages.aspx#creating-an-angular-app",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "5 Things to Know About Angular Development With C#",
					"url": "https://programmers.io/5-things-to-know-about-angular-development-with-c/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 12,
			"name": "JavaScript",
			"about": "High-level, often just-in-time compiled language that conforms to the ECMAScript standard. It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM).\nThe ECMAScript standard does not include any input/output (I/O), such as networking, storage, or graphics facilities. In practice, the web browser or other runtime system provides JavaScript APIs for I/O. ",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/JavaScript",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Comparison of JavaScript-based web frameworks (Wiki)",
					"url": "https://en.wikipedia.org/wiki/Comparison_of_JavaScript-based_web_frameworks",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Style guide",
					"url": "https://google.github.io/styleguide/jsguide.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 13,
			"name": "RegEx",
			"about": "A regular expression (shortened as regex or regexp) is a sequence of characters that specifies a search pattern in text. Usually such patterns are used by string-searching algorithms for \"find\" or \"find and replace\" operations on strings, or for input validation.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Regular_expression",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "regexr.com",
					"url": "https://regexr.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "regex101.com",
					"url": "https://regex101.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 14,
			"name": "T-SQL Server",
			"about": "Transact-SQL (T-SQL) is Microsoft's and Sybase's proprietary extension to the SQL (Structured Query Language) used to interact with relational databases. T-SQL expands on the SQL standard to include procedural programming, local variables, various support functions for string processing, date processing, mathematics, etc. and changes to the DELETE and UPDATE statements.",
			"links": [
				{
					"name": "Data Types (numerics, strings, time)",
					"url": "https://docs.microsoft.com/en-us/sql/t-sql/data-types/data-types-transact-sql?view=sql-server-ver16",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "sqlservertutorial.net",
					"url": "https://www.sqlservertutorial.net/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "W3 Schools",
					"url": "https://www.w3schools.com/sql/default.asp",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 15,
			"name": "SQL Language",
			"about": "SQL (Structured Query Language) is a domain-specific language used in programming and designed for managing data held in a relational database management system (RDBMS), or for stream processing in a relational data stream management system (RDSMS). It is particularly useful in handling structured data, i.e. data incorporating relations among entities and variables. ",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/SQL",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "(General) Style",
					"url": "https://www.sqlstyle.guide/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "char Vs nchar",
					"url": "https://stackoverflow.com/a/176523/7389293",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Data Types",
					"url": "https://www.w3schools.com/sql/sql_datatypes.asp",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 16,
			"name": "ASP.NET Razor",
			"about": "Razor is an ASP.NET programming syntax used to create dynamic web pages with the C# or VB.NET programming languages. Razor Pages can make coding page-focused scenarios easier and more productive than using controllers and views.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/ASP.NET_Razor",
					"description": "",
					"tags": [
						"wiki"
					]
				},
				{
					"name": "HTML Helper",
					"url": "https://www.completecsharptutorial.com/asp-net-mvc5/beginners-course-of-html-helper-in-asp-net-mvc.php",
					"description": "",
					"tags": [
						"razor",
						"helpers"
					]
				},
				{
					"name": "Custom Helper Minimal Example (SO)",
					"url": "https://stackoverflow.com/a/50947610/7389293",
					"description": "",
					"tags": [
						"helper",
						"stackoverflow"
					]
				},
				{
					"name": "Learn Razor Pages - Forms",
					"url": "https://www.learnrazorpages.com/razor-pages/forms",
					"description": "",
					"tags": [
						"razor",
						"forms"
					]
				}
			]
		},
		{
			"id": 17,
			"name": ".NET Tutorials",
			"about": "Different tutorial sites focused on .NET technologies, general view of them.",
			"links": [
				{
					"name": "MS Technical Documentation",
					"url": "https://docs.microsoft.com/en-us/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MS .NET Video Tutorials",
					"url": "https://dotnet.microsoft.com/en-us/learn/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MS ASP.NET Core Docs                                  ",
					"url": "https://docs.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-6.0",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTML Helper",
					"url": "https://www.completecsharptutorial.com/asp-net-mvc5/beginners-course-of-html-helper-in-asp-net-mvc.php",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Rip Tutorial",
					"url": "https://riptutorial.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DotNet Tutorials",
					"url": "https://dotnettutorials.net/course/csharp-dot-net-tutorials/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "TutorialsTeacher",
					"url": "https://www.tutorialsteacher.com/csharp",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DotNet Academy",
					"url": "https://dotnetcademy.net/Search",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Pragim Tech",
					"url": "https://www.pragimtech.com/course-category/free-online-courses/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Dot Net Tutorials",
					"url": "https://dotnettutorials.net/course/asp-dot-net-mvc-tutorials/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 18,
			"name": "C# Basics",
			"about": "C# is a general-purpose, multi-paradigm programming language. C# encompasses static typing, strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines. The C# programming language was designed by Anders Hejlsberg from Microsoft in 2000 and was later approved as an international standard by Ecma (ECMA-334) in 2002 and ISO/IEC (ISO/IEC 23270) in 2003.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/C_Sharp_(programming_language)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "C# Style Guide (by Google)",
					"url": "https://google.github.io/styleguide/csharp-style.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "C# Style Rules (by MS)",
					"url": "https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "C# Built In Types",
					"url": "https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Constraints on type parameters",
					"url": "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/constraints-on-type-parameters",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Interfaces",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 19,
			"name": "Online Books",
			"about": "Just one book per link. At ResearchGate you can find highly developed ideas for projects.",
			"links": [
				{
					"name": "ResearchGate (papers, ideas)",
					"url": "https://www.researchgate.net/search?q=bug%20tracker",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "CSharp In Depth",
					"url": "https://csharpindepth.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "The Little ASP.NET Core Book (ENG)",
					"url": "https://recaffeinate.co/book/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "The Little ASP.NET Core Book (SPA)",
					"url": "https://aspnetcoremaster.com/asp.net/core/2019/03/17/libro-asp-net-core.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 20,
			"name": "Ebooks",
			"about": "Links to different sites with free ebooks resources.",
			"links": [
				{
					"name": ".NET Architecture Guides (Official)",
					"url": "https://dotnet.microsoft.com/en-us/learn/dotnet/architecture-guides",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Rip Tutorial",
					"url": "https://riptutorial.com/ebook",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 21,
			"name": "MVC Best Practices",
			"about": "Best practices for MVC development on .NET",
			"links": [
				{
					"name": "Helper Methods",
					"url": "https://stackoverflow.com/questions/8233286/mvc3-helper-method-to-be-used-by-several-controllers",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 22,
			"name": "MVC - Model on .NET",
			"about": "",
			"links": [
				{
					"name": "ViewModels More Functional",
					"url": "https://www.danylkoweb.com/Blog/aspnet-mvc-viewmodel-make-your-viewmodels-more-functional-PY",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Model Validation",
					"url": "https://www.c-sharpcorner.com/article/model-validation-in-mvc-5/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 23,
			"name": "MVC - View on .NET",
			"about": "",
			"links": [
				{
					"name": "MVC Dropdowns",
					"url": "https://www.danylkoweb.com/Blog/the-ultimate-guide-to-aspnet-mvc-dropdowns-JO",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Best Way to Bind Partial View",
					"url": "https://www.ifourtechnolab.com/blog/best-way-to-bind-partial-view-for-improving-performance-in-asp-net-mvc",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 24,
			"name": "MVC - Controller on .NET",
			"about": "",
			"links": [
				{
					"name": "ViewModels More Functional",
					"url": "https://www.danylkoweb.com/Blog/aspnet-mvc-viewmodel-make-your-viewmodels-more-functional-PY",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 25,
			"name": "Repository Pattern & Unit of Work",
			"about": "The repository and unit of work patterns are intended to create an abstraction layer between the data access layer and the business logic layer of an application. Implementing these patterns can help insulate your application from changes in the data store and can facilitate automated unit testing or test-driven development (TDD).",
			"links": [
				{
					"name": "Why? (SO)",
					"url": "https://stackoverflow.com/questions/8749153/why-use-repository-pattern-or-please-explain-it-to-me",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "But why?? (SO)",
					"url": "https://stackoverflow.com/questions/11985736/repository-pattern-step-by-step-explanation",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Implementation #1 (SO)",
					"url": "https://stackoverflow.com/questions/10925257/best-repository-pattern-for-asp-net-mvc/10925510#10925510",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Implementation #2 (pragimtech.com)",
					"url": "https://www.pragimtech.com/blog/blazor/rest-api-repository-pattern/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Implementation #3 (remondo.net)",
					"url": "./docs/001.pdf",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Why: Interfaces in RP, with good implementation example",
					"url": "https://stackoverflow.com/questions/10616131/repository-pattern-why-exactly-do-we-need-interfaces",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Why: RP and DDD",
					"url": "https://stackoverflow.com/questions/27631490/what-is-the-use-of-repository-and-why-do-mvc-developers-create-repository",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DbContext (entityframeworktutorial.net)",
					"url": "https://www.entityframeworktutorial.net/efcore/entity-framework-core-dbcontext.aspx",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Models (POCO), Entity Framework and Data Patterns",
					"url": "https://www.codeproject.com/Articles/615499/Models-POCO-Entity-Framework-and-Data-Patterns",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Content List for RP interface (GS)",
					"url": "https://docs.google.com/spreadsheets/d/18gYhR05ykkRqwye3n808POnTfXT_8MVjz-a5rtldZrg/edit?usp=sharing",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "⭐ Repository and Unit of Work Patterns in an ASP.NET MVC (MS)",
					"url": "https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Martin Fowler on Repository Pattern",
					"url": "https://martinfowler.com/eaaCatalog/repository.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 26,
			"name": "Test-Driven Development",
			"about": "Test-Driven Development (TDD) is a software development process relying on software requirements being converted to test cases before software is fully developed, and tracking all software development by repeatedly testing the software against all test cases. This is as opposed to software being developed first and test cases created later.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Test-driven_development",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 27,
			"name": "Scrum",
			"about": "Scrum, or SCRUM, is a framework for project management, with an initial emphasis on software development, although it has been used in other fields including research, sales, marketing and advanced technologies. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within time-boxed iterations, called sprints, no longer than one month and most commonly two weeks. The scrum team assesses progress in time-boxed daily meetings of 15 minutes or fewer, called daily scrums (a form of stand-up meeting). At the end of the sprint, the team holds two further meetings: the sprint review which demonstrates the work done to stakeholders to elicit feedback, and sprint retrospective which enables the team to reflect and improve.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Scrum_(software_development)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Scrum Guide (Official)",
					"url": "https://scrumguides.org/scrum-guide.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Quick Overview",
					"url": "https://www.professionaldevelopment.ie/who-uses-scrum",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What's Backlog? (SPA)",
					"url": "https://muyagile.com/que-es-el-backlog/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 28,
			"name": "Agile",
			"about": "In software development, Agile practices include requirements discovery and solutions improvement through the collaborative effort of self-organizing and cross-functional teams with their customer(s)/end user(s), adaptive planning, evolutionary development, early delivery, continual improvement, and flexible responses to changes in requirements, capacity, and understanding of the problems to be solved.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Agile_software_development",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Agile Manifesto",
					"url": "http://agilemanifesto.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Agile Alliance",
					"url": "https://www.agilealliance.org/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 29,
			"name": "SOLID",
			"about": "Mnemonic acronym for five design principles intended to make object-oriented designs more understandable, flexible, and maintainable. Those principles are:\n• SRP - Single Responsibility\n• OCP - Open-Closed\n• LSP - Liskov Substitution\n• ISP - Interface Segregation\n• DIP - Dependency Inversion",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/SOLID",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Example: remondo.net",
					"url": "http://web.archive.org/web/20150411131853/http://www.remondo.net/category/solid-series/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 30,
			"name": "MVC (General)",
			"about": "Model–view–controller (MVC) is a software architectural pattern commonly used for developing user interfaces that divide the related program logic into three interconnected elements. This is done to separate internal representations of information from the ways information is presented to and accepted from the user.Traditionally used for desktop graphical user interfaces (GUIs), this pattern became popular for designing web applications.Popular programming languages have MVC frameworks that facilitate the implementation of the pattern.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Life Cycle",
					"url": "https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/lifecycle-of-an-aspnet-mvc-5-application",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Basic Architecture (SO)",
					"url": "https://stackoverflow.com/questions/9732747/what-type-of-architecture-is-this-called/9933371#9933371",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Basic Implementation (danylkoweb.com)",
					"url": "https://www.danylkoweb.com/Blog/aspnet-mvc-make-your-application-an-onion-QE",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 31,
			"name": "APIs",
			"about": "An application programming interface (API) is a way for two or more computer programs to communicate with each other. It is a type of software interface, offering a service to other pieces of software. A document or standard that describes how to build or use such a connection or interface is called an API specification. A computer system that meets this standard is said to implement or expose an API. The term API may refer either to the specification or to the implementation.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/API",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "mockAPI",
					"url": "https://mockapi.io/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 32,
			"name": "Social Media 🧠",
			"about": "Some of the best places I've known in the internet for .NET developers.",
			"links": [
				{
					"name": "C# Discord",
					"url": "https://discord.gg/csharp",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "ASP.NET Core en Español",
					"url": "https://www.facebook.com/groups/291405831518163",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 33,
			"name": "Job Search",
			"about": "Places where to look up for a job.",
			"links": [
				{
					"name": "arc.dev",
					"url": "https://arc.dev/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "amazonuniversity.jobs",
					"url": "https://www.amazonuniversity.jobs/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "UpWork",
					"url": "https://www.upwork.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Fiverr",
					"url": "https://www.fiverr.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "FlexJobs",
					"url": "https://www.flexjobs.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Freelancer Dot Net Developer",
					"url": "https://www.facebook.com/groups/185064098523465",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Talently",
					"url": "https://everest.talently.tech/register/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "lemon.io",
					"url": "https://lemon.io/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 34,
			"name": "Online Tools",
			"about": "",
			"links": [
				{
					"name": "10015 Tools",
					"url": "https://10015.io/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Thought Works Technology Radar",
					"url": "https://www.thoughtworks.com/radar",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "overapi.com (cheatsheets)",
					"url": "https://overapi.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Desmos Online Graphic Calculator",
					"url": "https://www.desmos.com/calculator",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Desmos Scientific Calculator",
					"url": "https://www.desmos.com/scientific",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 35,
			"name": "Entity Framework (6, Core)",
			"about": "Entity Framework is an open-source ORM framework for .NET applications supported by Microsoft. It enables developers to work with data using objects of domain specific classes without focusing on the underlying database tables and columns where this data is stored. With the Entity Framework, developers can work at a higher level of abstraction when they deal with data, and can create and maintain data-oriented applications with less code compared with traditional applications. ",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Entity_Framework",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://docs.microsoft.com/en-us/ef/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "EF Basics",
					"url": "https://www.entityframeworktutorial.net/what-is-entityframework.aspx",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "entityframework.net",
					"url": "https://entityframework.net/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DbContext (session to DB)",
					"url": "https://www.entityframeworktutorial.net/basics/context-class-in-entity-framework.aspx",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Tutorials Point (for beginners)",
					"url": "https://www.tutorialspoint.com/entity_framework/index.htm",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "EF Good Practices (SO)",
					"url": "https://stackoverflow.com/a/19312851/7389293",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 36,
			"name": "Object–Relational Mapping (ORM)",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What's this?",
					"url": "https://education.launchcode.org/csharp-web-development/chapters/orm-intro/background.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "NHibernate",
					"url": "https://nhibernate.info/",
					"description": "",
					"tags": [
						"orm"
					]
				}
			]
		},
		{
			"id": 37,
			"name": "Domain-Driven Design (DDD)",
			"about": "It is a software development approach that uses and builds upon OOAD (Object-Oriented Analysis and Design) principles and ideas. Domain-driven design (DDD) is a major software design approach, focusing on modelling software to match a domain according to input from that domain's experts. Under domain-driven design, the structure and language of software code (class names, class methods, class variables) should match the business domain. For example, if a software processes loan applications, it might have classes like LoanApplication and Customer, and methods such as AcceptOffer and Withdraw.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Domain-driven_design",
					"description": "",
					"tags": [
						"ddd"
					]
				},
				{
					"name": "(a) \"Domain\"",
					"url": "https://en.wikipedia.org/wiki/Domain_(software_engineering)",
					"description": "Also known as \"problem domain\".",
					"tags": [
						"ddd",
						"wikipedia",
						"definition"
					]
				},
				{
					"name": "(b) \"Business Domain\"",
					"url": "https://en.wikipedia.org/wiki/Business_domain",
					"description": "Set of classes that represent objects in the business model being implemented. The business domain is distinguishable from the business model in that the business model is an understanding and explanation of information and behaviors in the problem domain, while the business domain is an implementation of that business model in a specific programming language.",
					"tags": [
						"ddd", "domain", "business"
					]
				},
				{
					"name": "(c) \"Business Model\"",
					"url": "https://en.wikipedia.org/wiki/Business_model",
					"description": "A business model describes how an organization creates, delivers, and captures value, in economic, social, cultural or other contexts. The process of business model construction and modification is also called \"business model innovation\" and forms a part of business strategy.",
					"tags": [
						"ddd", "business"
					]
				},
				{
					"name": "Vladimir Khorikov: DDD in a nutshell",
					"url": "https://www.youtube.com/watch?v=kPV1SkdSnhE&ab_channel=CentricRO",
					"description": "Takeaways: the main principles of DDD and why DDD is important in business applications, technical aspects and patterns in DDD, including the difference between anemic and rich domain models, the relation between DDD, microservices and Cloud.",
					"tags": [
						"ddd", "video", "pelado", "vladimir", "youtube"
					]
				},
				{
					"name": "Free Course on DDD, PluralSight",
					"url": "https://www.pluralsight.com/courses/domain-driven-design-in-practice",
					"description": "A descriptive, in-depth walk-through for applying Domain-Driven Design principles in practice.",
					"tags": [
						"course"
					]
				}
			]
		},
		{
			"id": 38,
			"name": "NuGet Dependencies",
			"about": "",
			"links": [
				{
					"name": "T4MVC",
					"url": "https://github.com/T4MVC/T4MVC",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "AutoMapper",
					"url": "http://automapper.org/",
					"description": "",
					"tags": [
						"mapper",
						"dto"
					]
				},
				{
					"name": "C# Bogus",
					"url": "https://github.com/bchavez/Bogus",
					"description": "",
					"tags": [
						"form",
						"content",
						""
					]
				},
				{
					"name": "RabbitMQ",
					"url": "https://betterprogramming.pub/why-do-we-need-rabbitmq-f9f1d99c074c",
					"description": "",
					"tags": [
						"message",
						"broker",
						""
					]
				},
				{
					"name": "NLog",
					"url": "https://nlog-project.org/",
					"description": "",
					"tags": [
						"logging",
						"",
						""
					]
				}
			]
		},
		{
			"id": 39,
			"name": "GitHub Pages",
			"about": "",
			"links": [
				{
					"name": "Use own DB on GHP",
					"url": "https://stackoverflow.com/questions/31655085/database-on-a-personal-github-page",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Link to html in another repo",
					"url": "https://stackoverflow.com/questions/62601696/github-page-link-to-html-in-another-repo",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 40,
			"name": "Hosting Services",
			"about": "",
			"links": [
				{
					"name": "Azure",
					"url": "https://azure.microsoft.com/en-us/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "AWS",
					"url": "https://aws.amazon.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "somee.com",
					"url": "https://somee.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "myasp.net",
					"url": "https://www.myasp.net/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "smarterasp.net",
					"url": "https://www.smarterasp.net",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "ionos.com/",
					"url": "https://www.ionos.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "contabo.com",
					"url": "https://contabo.com/en/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "sitioshispanos.com",
					"url": "https://www.sitioshispanos.com/es/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "asphostportal.com",
					"url": "https://www.asphostportal.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "PlanetScale",
					"url": "https://planetscale.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Firebase",
					"url": "https://firebase.google.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Vercel",
					"url": "https://vercel.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 41,
			"name": "OOP",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Object-oriented_programming",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "4 Principles of Object-Oriented Programming",
					"url": "https://khalilstemmler.com/articles/object-oriented/programming/4-principles/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 42,
			"name": "🤓",
			"about": "Non-topical stuffs.",
			"links": [
				{
					"name": "List of topics",
					"url": "./assets/broken.png",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "musicForProgramming();",
					"url": "https://musicforprogramming.net/fiftyseven",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "InfoQ - Software Development News, Trends and Best Practices",
					"url": "https://www.infoq.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 43,
			"name": "LINQ",
			"about": "Language-Integrated Query (LINQ) is the name for a set of technologies based on the integration of query capabilities directly into the C# language. Traditionally, queries against data are expressed as simple strings without type checking at compile time or IntelliSense support. With LINQ, a query is a first-class language construct, just like classes, methods, events. You write queries against strongly typed collections of objects by using language keywords and familiar operators. The LINQ family of technologies provides a consistent query experience for objects (LINQ to Objects), relational databases (LINQ to SQL), and XML (LINQ to XML).",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Language_Integrated_Query",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Official Docs",
					"url": "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "codingame.com free course",
					"url": "https://www.codingame.com/playgrounds/213/using-c-linq---a-practical-overview/welcome",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Using IQueryable with Linq",
					"url": "https://stackoverflow.com/questions/1578778/using-iqueryable-with-linq/1578809#1578809",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 44,
			"name": "YouTube 📺",
			"about": "Best channels I've found so far about .NET technologies and programming learning. Videos marked as SPA are in Spanish.",
			"links": [
				{
					"name": "freeCodeCamp.org",
					"url": "https://www.youtube.com/c/Freecodecamp/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "dotNET",
					"url": "https://www.youtube.com/c/dotNET/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Coder Foundry",
					"url": "https://www.youtube.com/c/CoderFoundryBootcamp/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Code Skills",
					"url": "https://www.youtube.com/c/jestradabe/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": ".NET Interview Preparation videos",
					"url": "https://www.youtube.com/c/dnfvideo/videos",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Mark Richards, on Software Architecture",
					"url": "https://www.youtube.com/channel/UC-Z7T0lAq_xECevIz8E5R5w",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "hdeleonnet (Back-End; SPA)",
					"url": "https://www.youtube.com/c/hdeleonnet",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "BettaTech (SPA)",
					"url": "https://www.youtube.com/c/BettaTech",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "EDteam (SPA)",
					"url": "https://www.youtube.com/c/EDteam",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 45,
			"name": ".NET Frameworks",
			"about": "",
			"links": [
				{
					"name": "abp.io",
					"url": "https://abp.io/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "syncfusion.com (inspiration)",
					"url": "https://ej2.syncfusion.com/home/aspnetmvc.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 46,
			"name": "Software Architecture",
			"about": "Software architecture refers to the fundamental structures of a software system and the discipline of creating such structures and systems. Each structure comprises software elements, relations among them, and properties of both elements and relations.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Software_architecture",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Software Architecture Monday, with Mark Richards",
					"url": "https://youtu.be/FKYKeqWfyIs",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Multitier Architecture (Wiki)",
					"url": "https://en.wikipedia.org/wiki/Multitier_architecture",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Onion Architecture (Jeffrey Palermo)",
					"url": "https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Jamstack.org",
					"url": "https://jamstack.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Martin Fowler",
					"url": "https://martinfowler.com/architecture/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 47,
			"name": "ADO.NET",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/ADO.NET",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MS Docs",
					"url": "https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Entity Framework VS ADO.NET",
					"url": "https://stackoverflow.com/questions/22328889/entity-framework-vs-pure-ado-net",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 48,
			"name": "Cleaner Code Examples",
			"about": "",
			"links": [
				{
					"name": "if() return",
					"url": "https://www.youtube.com/shorts/JnFh2NoAM4s",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 49,
			"name": "Workflow Tools",
			"about": "",
			"links": [
				{
					"name": "Asana",
					"url": "https://app.asana.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "notion.so",
					"url": "https://www.notion.so",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "boostnote.io",
					"url": "https://boostnote.io/gdm",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 50,
			"name": "JSON",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/JSON",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "tutorialspoint.com",
					"url": "https://www.tutorialspoint.com/json/json_quick_guide.htm",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "11 Ways to Improve JSON Performance & Usage",
					"url": "https://stackify.com/top-11-json-performance-usage-tips/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "JSON Google Style Guide",
					"url": "https://google.github.io/styleguide/jsoncstyleguide.xml",
					"description": "",
					"tags": [
						"style guide"
					]
				}
			]
		},
		{
			"id": 51,
			"name": "Packages",
			"about": "Packages for: npm, NuGet",
			"links": [
				{
					"name": "openbase.com (npm)",
					"url": "https://openbase.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 52,
			"name": "HTML Template Engines",
			"about": "Template Engines are tools that help us break HTML code into smaller pieces that we can reuse across multiple HTML files. They also give you the power to feed data into variables that help you simplify your code.",
			"links": [
				{
					"name": "Top 10",
					"url": "https://openbase.com/categories/js/most-popular-javascript-html-templating-engine-libraries",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "How to Modularize HTML Using Template Engines and Gulp",
					"url": "https://zellwk.com/blog/nunjucks-with-gulp/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Nunjucks",
					"url": "https://mozilla.github.io/nunjucks/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Pug",
					"url": "https://github.com/pugjs/pug",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 53,
			"name": "Docker",
			"about": "Docker is an open source containerization platform. It enables developers to package applications into containers—standardized executable components combining application source code with the operating system (OS) libraries and dependencies required to run that code in any environment.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Docker_(software)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Docker For Beginners",
					"url": "https://www.freecodecamp.org/news/docker-simplified-96639a35ff36/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Docker Docs",
					"url": "https://docs.docker.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Docker, what is it and what is the purpose",
					"url": "https://stackoverflow.com/a/42111368/7389293",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 54,
			"name": "DanylkoWeb Topics 🔥",
			"about": "A technology blog focusing on mobile, responsive, and web technologies primarily in the Microsoft stack.",
			"links": [
				{
					"name": "ASP.NET MVC Best Practices and Guidelines",
					"url": "https://www.danylkoweb.com/Blog/aspnet-mvc-best-practices-and-guidelines-Q4",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 55,
			"name": "Well-being ❤️‍🩹",
			"about": "",
			"links": [
				{
					"name": "Healthy Software Developer",
					"url": "https://www.youtube.com/c/JaymeEdwardsMedia",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 56,
			"name": "Ajax",
			"about": "Ajax (\"Asynchronous JavaScript and XML/JSON\") is a set of web development techniques that uses various web technologies on the client-side to create asynchronous web applications. Ajax is not a technology, but rather a programming concept and technology use.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Ajax_(programming)",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 57,
			"name": "Git",
			"about": "Git is free and open source software for distributed version control: tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Git",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Git Docs",
					"url": "https://git-scm.com/doc",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Common Git Commands",
					"url": "http://guides.beanstalkapp.com/version-control/common-git-commands.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Git Workflow",
					"url": "https://wiki.spheredev.org/index.php/Git_for_the_lazy#Introduce_yourself_to_git",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "git - the simple guide",
					"url": "http://up1.github.io/git-guide/index.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "learngitbranching.js.org",
					"url": "https://learngitbranching.js.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "gitexercises.fracz.com",
					"url": "https://gitexercises.fracz.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "gitimmersion.com",
					"url": "https://gitimmersion.com/lab_01.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "visual-git-guide",
					"url": "https://marklodato.github.io/visual-git-guide/index-en.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 58,
			"name": "UI (User Interface)",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/User_interface",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Toast Notifications",
					"url": "https://codewithmukesh.com/blog/toast-notifications-in-aspnet-core/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 59,
			"name": "Nomad Work",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Digital_nomad",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "The Ultimate Digital Nomad Guide",
					"url": "https://www.outsite.co/digital-nomad-guide",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Reddit",
					"url": "https://www.reddit.com/r/digitalnomad/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "OUTSITE",
					"url": "https://www.outsite.co/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 60,
			"name": "Blogs",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "danylkoweb.com",
					"url": "https://www.danylkoweb.com",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "codejourney.net",
					"url": "https://www.codejourney.net/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "shhdharmen.me",
					"url": "https://blog.shhdharmen.me/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "meziantou.net",
					"url": "https://www.meziantou.net/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 61,
			"name": "JS Frameworks",
			"about": "A JavaScript framework is a collection of JavaScript code libraries that provide a web developer with pre-written code for routine programming tasks. Frameworks are structures with a particular context and help you create web applications within that context.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Comparison_of_JavaScript-based_web_frameworks",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What's",
					"url": "https://generalassemb.ly/blog/what-is-a-javascript-framework/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Angular",
					"url": "https://angular.io/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "ReactJS",
					"url": "https://reactjs.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Vue.js",
					"url": "https://vuejs.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Alpine",
					"url": "https://alpinejs.dev/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 62,
			"name": "Blazor",
			"about": "Free and open-source web framework that enables developers to create web apps using C# and HTML (avoiding the use of JS).",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Blazor",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "https://swimburger.net/blog/dotnet/how-to-deploy-aspnet-blazor-webassembly-to-github-pagesHow to deploy ASP.NET Blazor WebAssembly to GitHub Pages",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 63,
			"name": "Static Site Generator",
			"about": "A static site generator is a tool that generates a full static HTML website based on raw data and a set of templates. Essentially, a static site generator automates the task of coding individual HTML pages and gets those pages ready to serve to users ahead of time.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "/assets/wikipedia-no.jpg",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What's",
					"url": "https://kinsta.com/blog/static-site-generator/#5-best-static-site-generators",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Jekyll",
					"url": "https://jekyllrb.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HUGO",
					"url": "https://gohugo.io",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "11ty (JS, NodeJS)",
					"url": "https://www.11ty.dev/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Gatsbyjs (from ReactJS)",
					"url": "https://www.gatsbyjs.com",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Gridsome",
					"url": "https://gridsome.org/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 64,
			"name": "Authentication/Authorization",
			"about": "Service and a procedure that enables members of different institutions to access protected information that is distributed on different web servers.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Authentication_and_authorization_infrastructure",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "auth0",
					"url": "https://auth0.com/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 65,
			"name": "C# Exception Handling",
			"about": "Process of responding to the occurrence of exceptions (anomalous or exceptional conditions requiring special processing) during the execution of a program. In general, an exception breaks the normal flow of execution and executes a pre-registered exception handler. The details of how this is done depend on whether it is a hardware or software exception. Some exceptions, especially hardware ones, may be handled so gracefully that execution can resume where it was interrupted.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Exception_handling",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "throw keyword basic example",
					"url": "https://www.tutorialsteacher.com/csharp/throw-csharp",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 66,
			"name": "App_Start",
			"about": "This entry is for explaining those files and resources initialized at the app start up.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "/assets/wikipedia-no.jpg",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Bundling and Minification",
					"url": "https://docs.microsoft.com/en-us/aspnet/mvc/overview/performance/bundling-and-minification",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Bundling #1",
					"url": "https://www.c-sharpcorner.com/article/bundling-in-asp-net-mvc-application/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Bundling #2",
					"url": "https://www.tutorialsteacher.com/mvc/scriptbundle-mvc",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 67,
			"name": "npm Dependencies",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Npm_(software)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "npmjs (Official site)",
					"url": "https://www.npmjs.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "FakerJS",
					"url": "https://fakerjs.dev/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "axios",
					"url": "https://github.com/axios/axios",
					"about": "Promise based HTTP client for the browser and node.js",
					"tags": [
						"npm",
						"http"
					]
				}
			]
		},
		{
			"id": 68,
			"name": "System.Collections",
			"about": "It is a grouping of some variable number of data items (possibly zero) that have some shared significance to the problem being solved and need to be operated upon together in some controlled fashion.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Collection_(abstract_data_type)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "LinkedIn: IEnumerable vs ICollection vs IList vs IQueryable",
					"url": "https://www.linkedin.com/pulse/ienumerable-vs-icollection-idictionary-ilist-hasan-shahjahan/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Code Project: ist vs IEnumerable vs IQueryable vs ICollection vs IDictionary",
					"url": "https://www.codeproject.com/Articles/832189/List-vs-IEnumerable-vs-IQueryable-vs-ICollection-v",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 69,
			"name": "Big O notation",
			"about": "Big-O notation is the language we use for talking about how long an algorithm takes to run (time complexity) or how much memory is used by an algorithm (space complexity). Big-O notation can express the best, worst, and average-case running time of an algorithm.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Big_O_notation",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 70,
			"name": "🔙 Back-End Portfolio/Prep 🔚",
			"about": "",
			"links": [
				{
					"name": "Choose the Language: C#",
					"url": "https://en.wikipedia.org/wiki/C_Sharp_(programming_language)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Choose the Framework: .NET",
					"url": "https://en.wikipedia.org/wiki/.NET_Framework_version_history",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP Protocol",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP status codes list (Wikipedia)",
					"url": "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP Response Status Codes (MDN)",
					"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP Request Methods (verbs; MDN)",
					"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "ORM: Entity Framework",
					"url": "https://en.wikipedia.org/wiki/Entity_Framework",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MS SQL Server/Syntax",
					"url": "https://en.wikipedia.org/wiki/Microsoft_SQL_Server",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "CRUD/Store Procedures",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "DB Design (Constraints, Rules)",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Lazy Loading",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Back-End Security",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "JSON Web Token",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Authentication/Authorization",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Layer Filtering",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Queue Tasks (Tareas en segundo plano)",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Webhooks",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Services: API Rest, SOAP",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Document Generation (Swagger)",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Unit Testing",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Design Patterns: Observer, DI, Mediator, Factory, Builder, Singleton, Facade, Strategy, State",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Basic Front-End",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 71,
			"name": "Web Development Basics",
			"about": "Web development is the work involved in developing a website for the Internet (World Wide Web) or an intranet (a private network). Web development can range from developing a simple single static page of plain text to complex web applications, electronic businesses, and social network services. A more comprehensive list of tasks to which Web development commonly refers, may include Web engineering, Web design, Web content development, client liaison, client-side/server-side scripting, Web server and network security configuration, and e-commerce development. ",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Frontend_and_backend#Back-end_focused",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 72,
			"name": "Back-End Tools",
			"about": "",
			"links": [
				{
					"name": "Postman",
					"url": "https://www.postman.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "dbdiagram.io (DB design)",
					"url": "https://dbdiagram.io/home",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "dbml.org (Mark Up Language)",
					"url": "https://www.dbml.org/home/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 73,
			"name": "Typeface",
			"about": "A typeface is the design of lettering that can include variations in size, weight (e.g. bold), slope (e.g. italic), width (e.g. condensed), and so on. Each of these variations of the typeface is a font.",
			"links": [
				{
					"name": "List of monospaced typefaces (Wikipedia)",
					"url": "https://en.wikipedia.org/wiki/List_of_monospaced_typefaces",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "IBM Plex® typeface",
					"url": "https://github.com/IBM/plex/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Cascadia Code (MS)",
					"url": "https://github.com/microsoft/cascadia-code#installation",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 74,
			"name": "Blazor",
			"about": "Blazor is a free and open-source web framework that enables developers to create web apps using C# and HTML. There are five announced versions of it announced, one of them using web assembly.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Blazor",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "ASP.NET MVC Best Practices and Guidelines",
					"url": "https://www.danylkoweb.com/Blog/aspnet-mvc-best-practices-and-guidelines-Q4",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 75,
			"name": "UI/UX",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "58 Form Design & UX Best Practices",
					"url": "https://www.ventureharbour.com/form-design-best-practices/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 76,
			"name": "Data Structures",
			"about": "In computer science, a data structure is a data organization, management, and storage format that is usually chosen for efficient access to data. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data,i.e., it is an algebraic structure about data.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Data_structure",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "MS Docs",
					"url": "https://docs.microsoft.com/en-us/dotnet/standard/collections/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "List of Data Structures (Wikipedia)",
					"url": "https://en.wikipedia.org/wiki/List_of_data_structures",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Fundamental Data Structures and Algorithms in C# 🔥",
					"url": "https://dev.to/adavidoaiei/fundamental-data-structures-and-algorithms-in-c-4ocf",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 77,
			"name": "F#",
			"about": "F# is a functional-first, general purpose, strongly typed, multi-paradigm programming language that encompasses functional, imperative, and object-oriented programming methods. Developed by Microsoft, The F# Software Foundation.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/F_Sharp_(programming_language)",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 78,
			"name": "Restful APIs",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "REST APIs with .NET and C#",
					"url": "https://dotnet.microsoft.com/en-us/apps/aspnet/apis",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Web API vs REST API Simplified: 4 Critical Differences",
					"url": "https://hevodata.com/learn/web-api-vs-rest-api/#web",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 79,
			"name": "HTTP Protocol",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP Request Methods (verbs)",
					"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "HTTP Status (Mozilla)",
					"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "List of HTTP status codes (Wikipedia)",
					"url": "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 80,
			"name": "Microservices",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What is a microservice? (SO)",
					"url": "https://stackoverflow.com/questions/46575898/what-is-a-microservice",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 81,
			"name": "C# Advanced",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Reflection",
					"url": "https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/reflection",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 82,
			"name": "Strings",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Concatenating Strings Efficiently (String Builder)",
					"url": "https://web.archive.org/web/20181106113504/http://yoda.arachsys.com:80/csharp/stringbuilder.html",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 83,
			"name": "SQL Tutorials",
			"about": "Tutorials about agnostic SQL.",
			"links": [
				{
					"name": "sqlauthority.com",
					"url": "https://blog.sqlauthority.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "sqltutorial.org",
					"url": "https://www.sqltutorial.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "SQL Server and Azure SQL Labs and Workshops",
					"url": "https://github.com/microsoft/sqlworkshops",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "tt.com/sql",
					"url": "https://www.tutorialsteacher.com/sql",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "tt.com/sqlserver",
					"url": "https://www.tutorialsteacher.com/sqlserver",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "learnsql.com",
					"url": "https://learnsql.com/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "learnsqlonline.org/",
					"url": "https://www.learnsqlonline.org/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "tutorialspoint.com/sql",
					"url": "https://www.tutorialspoint.com/sql/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Normalization (up to 5NF)",
					"url": "https://youtu.be/GFQaEYEc8_8",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 84,
			"name": "ERM (with examples)",
			"about": "An entity–relationship model (or ER model) describes interrelated things of interest in a specific domain of knowledge. A basic ER model is composed of entity types (which classify the things of interest) and specifies relationships that can exist between entities (instances of those entity types). In software engineering, an ER model is commonly formed to represent things a business needs to remember in order to perform business processes. Consequently, the ER model becomes an abstract data model, that defines a data or information structure which can be implemented in a database, typically a relational database.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Entity Relationship (ER) Diagram Model with DBMS Example (Guru99)",
					"url": "https://www.guru99.com/er-diagram-tutorial-dbms.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "What is Entity Relationship Diagram (ERD)?",
					"url": "https://www.visual-paradigm.com/guide/data-modeling/what-is-entity-relationship-diagram/",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Entity Relationship Diagram Examples (edrawsoft.com)",
					"url": "https://www.edrawsoft.com/er-diagram-examples.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Entity Relationship Modeling Examples (O'Reilly)",
					"url": "https://learning.oreilly.com/library/view/learning-mysql/0596008643/ch04s04.html",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "EDM (Entity Data Model)",
					"url": "https://www.tutorialspoint.com/entity_framework/entity_framework_data_model.htm",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 85,
			"name": "Concept: Business",
			"about": "",
			"links": [
				{
					"name": "Business process (Wikipedia)",
					"url": "https://en.wikipedia.org/wiki/Business_process",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 86,
			"name": "Concept: Domain",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 87,
			"name": "Cheetsheets",
			"about": "A cheat sheet or crib sheet is a concise set of notes used for quick reference. Cheat sheets were historically used by students without an instructor or teacher's knowledge to cheat on a test or exam. This collection of cheatsheets here is about programming, meant to help you in your daily tasks as a professional programmer.",
			"links": [
				{
					"name": "Codecademy",
					"url": "https://www.codecademy.com/resources/cheatsheets/all",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 88,
			"name": "Building Forms",
			"about": "How to better build forms. Mainly using Bootstrap and/or any of its super-sets.",
			"links": [
				{
					"name": "Bootstrap Fieldset Legend: How To + Examples + Template",
					"url": "https://azmind.com/bootstrap-fieldset-legend/",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 89,
			"name": "💡",
			"about": "Some core ideas.",
			"links": [
				{
					"name": "Expertise",
					"url": "./docs/my_ideas/expertise.pdf",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 90,
			"name": "Background Tasks",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Hosted Services (Queued processes)",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Scheduled Tasks",
					"url": "",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 91,
			"name": "VSCode (Tweaks for .NET development)",
			"about": "",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Visual_Studio_Code",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "scriptcs (C# integration for \"Code Runner\" extension",
					"url": "https://github.com/scriptcs/scriptcs",
					"description": "",
					"tags": [
						""
					]
				}
			]
		},
		{
			"id": 92,
			"name": "Cryptography and .NET",
			"about": "Cryptography, or cryptology is the practice and study of techniques for secure communication in the presence of adversarial behavior. More generally, cryptography is about constructing and analyzing protocols that prevent third parties or the public from reading private messages.",
			"links": [
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Cryptography",
					"description": "",
					"tags": [
						"wikipedia"
					]
				},
				{
					"name": "Cryptography in .NET",
					"url": "https://www.meziantou.net/cryptography-in-dotnet.htm"
				}
			]
		},
		{
			"id": 93,
			"name": "Layer Service",
			"about": "On Domain Drive Design",
			"links": [
				{
					"name": "Wikipedia",
					"url": "",
					"description": "",
					"tags": [
						"wikipedia"
					]
				},
				{
					"name": "Service Layer Architecture",
					"url": "https://stackoverflow.com/questions/14887871/creating-a-service-layer-for-my-mvc-application",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Service Layer Design",
					"url": "https://stackoverflow.com/questions/31180816/mvc-design-pattern-service-layer-purpose",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Service/Business Layer & Repository Providers/Repository Layer",
					"url": "https://stackoverflow.com/questions/20514446/how-to-call-model-methods-in-controller-in-asp-net-mvc",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Persistence Layer",
					"url": "https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design",
					"description": "",
					"tags": [
						""
					]
				},
				{
					"name": "Domain Driven Design: Domain Service, Application Service",
					"url": "https://stackoverflow.com/questions/2268699/domain-driven-design-domain-service-application-service",
					"description": "",
					"tags": [
						"ddd",
						"services"
					]
				},
				{
					"name": "Validating with a Service Layer (C#)",
					"url": "https://learn.microsoft.com/en-us/aspnet/mvc/overview/older-versions-1/models-data/validating-with-a-service-layer-cs",
					"description": "",
					"tags": [
						"services",
						"validation"
					]
				}
			]
		},
		{
			"id": 94,
			"name": "Web Application Architectures",
			"about": "",
			"links": [
				{
					"name": "Google It",
					"url": "https://www.google.com/search?q=web+application+architecture",
					"description": "",
					"tags": [
						"search"
					]
				},
				{
					"name": "Wikipedia",
					"url": "https://en.wikipedia.org/wiki/Web_application",
					"description": "",
					"tags": [
						"wikipedia",
						"web application"
					]
				},
				{
					"name": "What is Web Application Architecture? How It Works, Trends, Best Practices and More",
					"url": "https://stackify.com/web-application-architecture/",
					"description": "",
					"tags": [
						"architecture"
					]
				},
				{
					"name": "Common Web Application Architectures (MS)",
					"url": "https://learn.microsoft.com/en-us/dotnet/architecture/modern-web-apps-azure/common-web-application-architectures?fbclid=IwAR1PcWjyZAhu82v7n8oM-GDk__yGiBIL1JGDAx5q88ek7IWTy2MKFCEnvZk",
					"description": "",
					"tags": [
						"architecture"
					]
				}
			]
		}
	]
}